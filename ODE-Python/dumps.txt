# ARE THE NUMERICAL DERIVATIVES SELF CONSISTENT (DO THEY INTEGRATE BACK UP TO THE CORRECT VALUES)?

step = smesh[1]-smesh[0]
laIntegrated = np.empty(len(smesh))
lbIntegrated = np.empty(len(smesh))
laIntegrated[0]  = la[0]
lbIntegrated[0]  = lb[0]
for i in range(len(smesh[1:-1])):
    laIntegrated[i+1] = laIntegrated[i] + numericalDerivatives[0,i+1]*step
    lbIntegrated[i+1] = lbIntegrated[i] + numericalDerivatives[1,i+1]*step
plt.figure("integration error")
plt.plot(la-laIntegrated)
plt.plot(lb-lbIntegrated)

rnIntegrated = np.empty(len(smesh))
cIIntegrated = np.empty(len(smesh))
rnIntegrated[0]  = r_n(0, geometryDef[0], geometryDef[1])
cIIntegrated[0]  = cI_s(0, geometryDef[2])
for i in range(len(smesh)-1):
    if not np.isfinite(rnIntegrated[i]):
        rnIntegrated[i+1]  = r_n(smesh[i+1], geometryDef[0], geometryDef[1])
    else:
        rnIntegrated[i+1] = rnIntegrated[i] + d_rn_d_s(smesh[i+1], geometryDef[0], geometryDef[1])*step
    cIIntegrated[i+1] = cIIntegrated[i] + d_cI_d_s(smesh[i+1], geometryDef[2])*step
print(rnIntegrated)
# assert(np.all(np.isfinite(rnIntegrated)))
plt.figure("analytical integration error")
plt.plot(rn-rnIntegrated,  label="rn")
plt.plot(cI-cIIntegrated, "--", label="cI")
plt.legend()
plt.figure("rn, cI")
plt.plot(smesh, rn)
plt.plot(smesh, cI)