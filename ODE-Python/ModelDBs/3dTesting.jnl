# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=7.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(2.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(5.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(5.65, 0.0))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((5.65, 0.0))
mdb.models['Model-1'].sketches['__profile__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((5.65, 0.0), 
    ), points=((5.65, 0.0), (5.65, 0.0), (5.9, 0.0), (5.95, 0.0), (5.85, 0.1), 
    (5.75, 0.0), (5.65, -0.05), (5.5, -0.05), (5.3, -0.05), (5.3, -0.05), (5.3, 
    -0.05), (5.35, 0.0)))
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=7.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(0.0, 1.0))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(0.0, 2.5))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(0.0, 2.625))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseSolidExtrude(depth=0.375, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=7.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(1.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(2.5, 0.0))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.5, 0.0))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.5, 0.0), 
    ), mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    0.0), )))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(1.0, -0.4), 
    point2=(2.5, 0.4))
mdb.models['Model-1'].sketches['__profile__'].Arc3Points(point1=(1.0, 0.4), 
    point2=(0.877641424179709, 0.479317776181743), point3=(0.944827675819397, 
    0.418249517679214))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((0.877641, 
    0.479318))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    0.877641424179709, 0.479317776181743), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 0.0), 
    ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.930403, 
    0.426674))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.930403, 
    0.426674), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 0.0), 
    ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.925559, 
    0.429927))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.75, 0.4))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.925559, 
    0.429927), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.75, 0.4), 
    ))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((-0.028037, 
    0.00127))
mdb.models['Model-1'].sketches['__profile__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    -0.028037410538032, 0.00127023808287695), ), points=((-0.028037410538032, 
    0.00127023808287695), (-0.05, 0.0), (0.0, 0.05), (0.05, 0.05), (0.05, 0.1), 
    (0.1, 0.1), (0.1, 0.1), (0.1, 0.05), (0.1, 0.0), (0.05, 0.0), (0.0, 0.0), (
    0.0, 0.0)))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933))
mdb.models['Model-1'].sketches['__profile__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933), ), radius=1.0, textPoint=(-1.24356341362, 0.144757747650146))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.027322, 0.0))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((1.0, 0.000933))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.027322, 
    0.0), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    0.999999564615281, 0.000933150196084113), ))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((1.027322, 
    -0.045037))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((0.027322, 
    -0.04597))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    1.02732203609644, -0.0450366008207066), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    0.0273224714811611, -0.0459697510167907), ))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.027322, 0.0))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.027322, 
    0.0), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933), ))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.027322, 0.0))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.027322, 
    0.0), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933), ))
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    0.0), point2=(2.8, 0.0))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.4, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.4, 0.0), 
    ))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.4, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    2.08166817117217e-17, -1.73472347597681e-18), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.4, 0.0), 
    ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.75, 0.445969))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.75, -0.4))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.4, 0.0))
mdb.models['Model-1'].sketches['__profile__'].SymmetryConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.75, 
    0.445969), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.75, -0.4), 
    ), symmetryAxis=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.4, 0.0), 
    ))
mdb.models['Model-1'].sketches['__profile__'].Arc3Points(point1=(1.0, 
    -0.445969054908483), point2=(0.835164654424531, -0.55), point3=(
    0.930158376693726, -0.448516875505447))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((0.835165, 
    -0.55))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    0.835164654424531, -0.55), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.896142, 
    -0.464012))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.896142, 
    -0.464012), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    -0.000933), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.919459, 
    -0.457189))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.75, 
    -0.445969))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.919459, 
    -0.457189), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.75, 
    -0.445969), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.5, 0.38481))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.5, 
    0.38481), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127), ))
mdb.models['Model-1'].sketches['__profile__'].Arc3Points(point1=(2.3, 
    0.427566525802308), point2=(2.38497393218549, 0.65), point3=(
    2.37142777442932, 0.483965009450912))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((2.3, 0.427567))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    0.427567))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((2.3, 
    0.427566525802308), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    0.427567), ))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((2.384974, 0.65))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    2.38497393218549, 0.65), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.390893, 
    0.520291))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.390893, 
    0.520291), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.381993, 
    0.505353))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    0.427567))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.381993, 
    0.505353), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    0.427567), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.361475, 
    0.490997))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.920671, 
    0.448666))
mdb.models['Model-1'].sketches['__profile__'].EqualRadiusConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.361475, 
    0.490997), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.920671, 
    0.448666), ))
mdb.models['Model-1'].sketches['__profile__'].Arc3Points(point1=(
    2.28033995628357, -0.430466540195336), point2=(2.38497393218549, -0.65), 
    point3=(2.37887191772461, -0.477536529302597))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((2.28034, 
    -0.430467))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    -0.430467))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    2.28033995628357, -0.430466540195336), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    -0.430467), ))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((2.384974, 
    -0.65))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    2.38497393218549, -0.65), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127), ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.38903028689284, 
    0.634929086995571), point2=(2.47196291582303, 0.430466540195336))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.399185, 
    -0.508524))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.399185, 
    -0.508524), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.471963, 
    -0.00127), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.377654, 
    -0.488567))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    -0.430467))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.377654, 
    -0.488567), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    -0.430467), ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.39779689274535, 
    -0.600974806747365), point2=(2.47196291582303, -0.430466540195336))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    0.430467))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    0.430467), ), point1=(2.35740232467651, 0.439955353736877))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.453078, 
    0.430467))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.453078, 
    0.430467), ), point1=(2.44960975646973, 0.425181567668915))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    -0.430467))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.735981, 
    -0.430467), ), point1=(2.37517976760864, -0.430601954460144))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.453078, 
    -0.430467))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.453078, 
    -0.430467), ), point1=(2.45281410217285, -0.42582181096077))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.86008314806796, 
    0.510153877187672), point2=(0.860083228175565, -0.510153742131886))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.0, -0.335764))
mdb.models['Model-1'].sketches['__profile__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.0, 
    -0.335764), ), ))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].constraints[55], ))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].dimensions[0], ))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-2', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-2'].BaseSolidExtrude(depth=0.375, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-2-1', 
    part=mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].rootAssembly.RadialInstancePattern(axis=(0.0, 0.0, 1.0), 
    instanceList=('Part-2-1', ), number=2, point=(0.0, 0.0, 0.0), totalAngle=
    360.0)
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.0, -2.5))
mdb.models['Model-1'].sketches['__edit__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.0, -2.5), ), 
    radius=2.5, textPoint=(-3.82417392730713, 0.484431743621826))
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-2'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-2'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[33], ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.471963, 
    -0.00127))
mdb.models['Model-1'].sketches['__edit__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.471963, 
    -0.00127), ), radius=2.5, textPoint=(-3.70778107643127, 0.499258577823639))
mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((0.0, 0.0))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((
    2.08166817117217e-17, -1.73472347597681e-18), ), points=((0.0, 0.0), (0.0, 
    0.0), (-0.05, -0.1), (-0.05, -0.15), (-0.05, -0.15), (-0.05, -0.15)))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.5, -0.001285))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.5, 
    -0.001285), ), mdb.models['Model-1'].sketches['__edit__'].dimensions[1]))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.629453, 
    0.434067))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.629453, 
    0.434067), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.645973, 
    -0.433875))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.645973, 
    -0.433875), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.629463, 
    0.430467))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.645982, 
    -0.430467))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.4, 0.0))
mdb.models['Model-1'].sketches['__edit__'].SymmetryConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.629463, 
    0.430467), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.645982, 
    -0.430467), ), symmetryAxis=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.4, 0.0), ))
mdb.models['Model-1'].sketches['__edit__'].CircleByCenterPerimeter(center=(0.0, 
    0.0), point1=(2.41612674648218, 0.642130473450261))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.416127, 
    -0.64213))
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.416127, 
    -0.64213), ), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.416127, 
    -0.64213))
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.416127, 
    -0.64213), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.919491, 
    0.451785))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.645982, 
    0.430467))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.919491, 
    0.451785), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.645982, 
    0.430467), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.402229, 
    0.508034))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.645982, 
    0.430467))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.402229, 
    0.508034), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.645982, 
    0.430467), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.392211, 0.49698))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.458063, 0.53874))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.392211, 
    0.49698), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.458063, 
    0.53874), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.395953, 
    -0.470153))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.630499, 
    -0.430467))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.395953, 
    -0.470153), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.630499, 
    -0.430467), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.37262, 
    -0.487915))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.416127, 
    -0.64213))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.37262, 
    -0.487915), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.416127, 
    -0.64213), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.919491, 
    -0.451785))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.646822, 
    -0.430467))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.919491, 
    -0.451785), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.646822, 
    -0.430467), ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[87], ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.447493, 0.54028))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.393635, 
    -0.721465))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.447493, 
    0.54028), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.393635, 
    -0.721465), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.58888, 0.032357))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.422598, 
    -0.617266))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.58888, 
    0.032357), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.422598, 
    -0.617266), ))
mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((2.64282, 0.516111))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((
    2.6428200303767, 0.516111235321638), ), points=((2.6428200303767, 
    0.516111235321638), (2.65, 0.5), (2.6, 0.5), (2.6, 0.5), (2.55, 0.5), (
    2.55, 0.5), (2.55, 0.55), (2.5, 0.55), (2.55, 0.55), (2.55, 0.55), (2.5, 
    0.55)))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.919512, 0.45173))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.919512, 
    -0.45173))
mdb.models['Model-1'].sketches['__edit__'].EqualRadiusConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.919512, 
    0.45173), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.919512, 
    -0.45173), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.919512, 
    -0.45173))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.399334, 
    -0.493179))
mdb.models['Model-1'].sketches['__edit__'].EqualRadiusConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((
    0.919512, -0.45173), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.399334, 
    -0.493179), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.393232, 
    -0.498529))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.389648, 
    0.493701))
mdb.models['Model-1'].sketches['__edit__'].EqualRadiusConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((
    2.393232, -0.498529), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.389648, 
    0.493701), ))
mdb.models['Model-1'].parts['Part-2'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-2'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=(mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-2'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1']), name='Part-3', 
    originalInstances=SUPPRESS)
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-2'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-2'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.630445, 
    0.430416))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.630445, 
    -0.430416))
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.630445, 
    0.430416), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.630445, 
    -0.430416), ), textPoint=(3.78626298904419, 0.00541681051254272), value=
    0.5)
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.472131, 
    0.264007))
mdb.models['Model-1'].sketches['__edit__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.472131, 
    0.264007), ), radius=0.125, textPoint=(2.68142080307007, 
    0.0893442034721375))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[3], ))
mdb.models['Model-1'].parts['Part-2'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-2'].regenerate()
mdb.models['Model-1'].rootAssembly.resumeFeatures(('Part-2-1', 
    'Part-2-1-rad-2'))
mdb.models['Model-1'].rootAssembly.suppressFeatures(('Part-2-1-rad-2', 
    'Part-2-1'))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.resumeFeatures(('Part-2-1-rad-2', 
    'Part-2-1'))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.features['Part-1-1'].resume()
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].rootAssembly.features['Part-3-1']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=(mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-2']), name=
    'Part-4', originalInstances=SUPPRESS)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=7.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(1.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(-2.5, 0.0))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.5, 0.0))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.5, 0.0), 
    ), mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 
    0.0), )))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.5, 0.0))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.5, 0.0), 
    ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.0, 0.0), 
    ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(1.05, 0.4), point2=(
    2.35, 0.4))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, 0.4))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, 0.4), 
    ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(1.05, -0.4), point2=
    (2.35, -0.4))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, -0.4))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, -0.4), 
    ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, 0.4))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, -0.4))
mdb.models['Model-1'].sketches['__profile__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, 0.4), )
    , entity2=mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((
    1.7, -0.4), ), textPoint=(3.66786956787109, 0.157151609659195), value=0.8)
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    0.0), point2=(-2.5, 0.0))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.25, 0.0), 
    ))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((0.0, 0.0), )
    , entity2=mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((
    -1.25, 0.0), ))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((-2.5, 0.0))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((-2.5, 0.0), 
    ), entity2=mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((
    -1.25, 0.0), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, 0.4))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, -0.4))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].SymmetryConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, 0.4), )
    , entity2=mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((
    1.7, -0.4), ), symmetryAxis=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.25, 0.0), 
    ))
mdb.models['Model-1'].sketches['__profile__'].Arc3Points(point1=(1.05, 0.4), 
    point2=(0.835164654424503, 0.55), point3=(0.968419432640076, 
    0.427651822566986))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((0.835165, 0.55))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.951057, 
    0.309017))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    0.835164654424503, 0.55), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.951057, 
    0.309017), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.926755, 
    0.452332))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, 0.4))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.926755, 
    0.452332), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.7, 0.4), 
    ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.952664, 
    0.439963))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.951057, 
    0.309017))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.952664, 
    0.439963), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.951057, 
    0.309017), ))
mdb.models['Model-1'].sketches['__profile__'].Arc3Points(point1=(
    1.1086368755322, -0.4), point2=(0.878848376085358, -0.477101175697701), 
    point3=(0.980645298957825, -0.383742719888687))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((0.878848, 
    -0.477101))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.951057, 
    0.309017))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    0.878848376085358, -0.477101175697701), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.951057, 
    0.309017), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.954314, 
    0.439082))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.975863, 
    -0.385264))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].SymmetryConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.954314, 
    0.439082), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.975863, 
    -0.385264), ), symmetryAxis=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.25, 0.0), 
    ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.954314, 
    0.439082))
mdb.models['Model-1'].sketches['__profile__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.954314, 
    0.439082), ), radius=0.125, textPoint=(1.0643618106842, 0.510592579841614))
mdb.models['Model-1'].sketches['__profile__'].Arc3Points(point1=(2.35, 0.4), 
    point2=(2.45494278884376, 0.472499633337442), point3=(2.42325973510742, 
    0.428103476762772))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((2.454943, 
    0.4725))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.377641, 
    -0.772542))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    2.45494278884376, 0.472499633337442), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.377641, 
    -0.772542), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.413381, 
    0.420458))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.377641, 
    -0.772542))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.413381, 
    0.420458), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.377641, 
    -0.772542), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.424941, 
    0.449893))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.672494, 0.4))
mdb.models['Model-1'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.424941, 
    0.449893), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((1.672494, 
    0.4), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.418155, 
    0.443214))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.930438, 
    0.417956))
mdb.models['Model-1'].sketches['__profile__'].EqualRadiusConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.418155, 
    0.443214), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.930438, 
    0.417956), ))
mdb.models['Model-1'].sketches['__profile__'].Arc3Points(point1=(
    2.31624696438009, -0.4), point2=(2.43874967965144, -0.55), point3=(
    2.37440919876099, -0.419480204582214))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((2.43875, -0.55))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.377641, 
    -0.772542))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    2.43874967965144, -0.55), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-2.377641, 
    -0.772542), ))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.413917, 
    0.44699))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.40875, 
    -0.449477))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].SymmetryConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.413917, 
    0.44699), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((2.40875, 
    -0.449477), ), symmetryAxis=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((-1.25, 0.0), 
    ))
mdb.models['Model-1'].sketches['__profile__'].ArcByCenterEnds(center=(0.0, 0.0)
    , direction=CLOCKWISE, point1=(2.43815469934747, 0.552631578947369), 
    point2=(2.43815469934747, -0.552631578947369))
mdb.models['Model-1'].sketches['__profile__'].ArcByCenterEnds(center=(0.0, 0.0)
    , direction=CLOCKWISE, point1=(0.884433352678351, 0.466666524051322), 
    point2=(0.884433352678351, -0.466666524051322))
mdb.models['Model-1'].sketches['__profile__'].dimensions[0].setValues(value=
    0.5)
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-5', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-5'].BaseSolidExtrude(depth=0.375, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=
    mdb.models['Model-1'].rootAssembly.datums[1], name='BC-1', region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(
    ((-0.92467, 0.380771, 0.25), ), ((-0.92467, -0.380771, 0.125), ), )), u1=
    SET, u2=SET, u3=SET, ur1=SET, ur2=SET, ur3=SET)
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['Model-1'].Coupling(alpha=0.0, controlPoint=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[13], )), couplingType=
    KINEMATIC, influenceRadius=WHOLE_SURFACE, localCsys=None, name=
    'Constraint-1', surface=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(
    ((-2.618603, -0.183148, 0.125), ), )), u1=ON, u2=ON, u3=ON, ur1=ON, ur2=ON, 
    ur3=ON)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-2', 
    region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(
    ((-2.618603, -0.183148, 0.125), ), )), u1=UNSET, u2=UNSET, u3=UNSET, ur1=
    UNSET, ur2=UNSET, ur3=SET)
del mdb.models['Model-1'].boundaryConditions['BC-2']
mdb.models['Model-1'].StaticStep(name='Step-1', previous='Initial')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-2', region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(
    ((-2.618603, -0.183148, 0.125), ), )), u1=UNSET, u2=UNSET, u3=UNSET, ur1=
    UNSET, ur2=UNSET, ur3=0.0872638888888889)
mdb.models['Model-1'].rootAssembly.makeIndependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ))
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=MEDIAL_AXIS, 
    regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.963828, 0.093333, 0.375), )))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.01, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ), size=0.25)
mdb.models['Model-1'].rootAssembly.seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].edges.findAt(((
    -2.080727, 0.25, 0.375), ), ((-2.080727, 0.25, 0.0), ), ((-1.360242, -0.25, 
    0.375), ), ((-1.360242, -0.25, 0.0), ), ((1.360242, 0.25, 0.0), ), ((
    2.080727, -0.25, 0.0), ), ((2.080727, -0.25, 0.375), ), ((1.360242, 0.25, 
    0.375), ), ), number=200)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
# Save by ajbarcio on 2024_06_14-10.25.59; build 2023 2022_09_28-13.11.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Material(name='Maraging300Steel')
mdb.models['Model-1'].materials['Maraging300Steel'].Elastic(table=((27500000.0, 
    0.33), ))
mdb.models['Model-1'].materials['Maraging300Steel'].Plastic(scaleStress=None, 
    table=((309700.0, 0.0), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Maraging300Steel', 
    name='Section-1', thickness=None)
mdb.models['Model-1'].parts['Part-4'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Part-4'].cells.findAt(((-0.963828, 
    0.093333, 0.375), ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\SMM\\PRS-Code-Git\\ODE-Python\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 17812, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 145.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 37.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'jobName': 'Job-1', 
    'time': 'Fri Jun 14 10:29:34 2024'})
mdb.models['Model-1'].constraints['Constraint-1'].suppress()
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.963828, 0.093333, 0.375), )))
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.37, name='__profile__', 
    sheetSize=14.82, transform=
    mdb.models['Model-1'].rootAssembly.MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(
    (-0.963828, 0.093333, 0.375), ), sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].rootAssembly.datums[1].axis2, 
    sketchOrientation=RIGHT, origin=(0.0, 0.0, 0.375)))
mdb.models['Model-1'].rootAssembly.projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(-2.51172743995874, 0.762791103355502))
mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((-2.511727, 
    0.762791))
mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.81117, 
    2.496523))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices.findAt((
    -2.51172743995874, 0.762791103355502), ), entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry.findAt((0.81117, 
    2.496523), ))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(-2.48088730903419, 0.308541990453621))
mdb.models['Model-1'].rootAssembly.PartitionFaceBySketch(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(((
    -0.963828, 0.093333, 0.375), )), sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchUpEdge=
    mdb.models['Model-1'].rootAssembly.datums[1].axis2)
del mdb.models['Model-1'].sketches['__profile__']
del mdb.models['Model-1'].rootAssembly.features['Partition face-1']
mdb.models['Model-1'].rootAssembly.PartitionFaceByExtendFace(extendFace=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt((
    -2.453808, 0.478358, 0.125), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(((
    -0.963828, 0.093333, 0.375), )))
mdb.models['Model-1'].rootAssembly.PartitionFaceByExtendFace(extendFace=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt((
    -2.453808, 0.478358, 0.125), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(((
    0.961914, -0.089317, 0.0), )))
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Partition face-1', 
    'Partition face-2'))
mdb.models['Model-1'].rootAssembly.PartitionFaceByExtendFace(extendFace=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt((
    -2.453808, 0.478358, 0.125), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(((
    0.961914, -0.089317, 0.0), ), ((-0.963828, 0.093333, 0.375), ), ))
del mdb.models['Model-1'].rootAssembly.features['Partition face-1']
mdb.models['Model-1'].rootAssembly.PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.963828, 0.093333, 0.375), )), extendFace=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt((
    -2.453808, 0.478358, 0.125), ))
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -2.524621, 0.29318, 0.375), )), name='b_Set-6')
mdb.models['Model-1'].RigidBody(bodyRegion=
    mdb.models['Model-1'].rootAssembly.sets['b_Set-6'], name='Constraint-2', 
    refPointAtCOM=ON, refPointRegion=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[13], )))
mdb.models['Model-1'].boundaryConditions['BC-2'].suppress()
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(((
    -2.618603, -0.183148, 0.125), )), name='Set-8')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-3', region=mdb.models['Model-1'].rootAssembly.sets['Set-8'], u1=UNSET, 
    u2=0.05, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.DatumCsysByThreePoints(coordSysType=
    CYLINDRICAL, line1=(1.0, 0.0, 0.0), line2=(0.0, 1.0, 0.0), name=
    'Datum csys-2', origin=(0.0, 0.0, 0.0))
del mdb.models['Model-1'].rootAssembly.features['Datum csys-2']
mdb.models['Model-1'].rootAssembly.DatumCsysByThreePoints(coordSysType=
    CYLINDRICAL, name='Cylindrical', origin=(0.0, 0.0, 0.0), point1=(1.0, 0.0, 
    0.0), point2=(0.0, 1.0, 0.0))
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(localCsys=
    mdb.models['Model-1'].rootAssembly.datums[30])
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=MEDIAL_AXIS, 
    regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    2.48734, -0.2261, 0.375), )))
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=MEDIAL_AXIS, 
    regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -2.524621, 0.29318, 0.375), )))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    2.48734, -0.2261, 0.375), ), ((-2.524621, 0.29318, 0.375), ), ((-2.480883, 
    0.306098, 0.375), ), ((2.480883, -0.306098, 0.375), ), ))
mdb.models['Model-1'].rootAssembly.PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    2.48734, -0.2261, 0.375), )), extendFace=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt((
    -0.92467, 0.380771, 0.25), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=MEDIAL_AXIS, 
    regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.333333, -0.062971, 0.375), )))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=MEDIAL_AXIS, 
    regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ), 
    technique=FREE)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.333333, -0.062971, 0.375), )))
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].edges.findAt(((
    0.316228, 0.948683, 0.375), ), ((-0.822192, 0.56921, 0.375), ), ((0.6, 
    -0.8, 0.375), ), ((-0.6, -0.8, 0.0), ), ((-0.316228, 0.948683, 0.0), ), ((
    0.822192, 0.56921, 0.0), ), ), minSizeFactor=0.1, size=0.0804376)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=MEDIAL_AXIS, 
    elemShape=HEX_DOMINATED, regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ), 
    technique=SWEEP)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD), ElemType(elemCode=C3D6, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D4, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ), 
    sizeGrowthRate=1.0, technique=FREE)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=MEDIAL_AXIS, 
    elemShape=HEX, regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ), 
    technique=SWEEP)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD), ElemType(elemCode=C3D6, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D4, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].cells.findAt(((
    -0.978757, -0.206913, 0.375), ), ((0.978757, 0.206913, 0.375), ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ))
del mdb.models['Model-1'].rootAssembly.features['Partition cell-2']
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'], ))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '14 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 4 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 16056, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 100.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 27.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jun 18 09:39:50 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(((
    -2.524621, 0.29318, 0.375), ), ((2.524942, -0.290529, 0.0), ), ((-2.456026, 
    -0.466835, 0.25), ), ((-2.618603, -0.183148, 0.125), ), ((-2.453808, 
    0.478358, 0.125), ), ), name='Set-22')
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-22'], u1=0.0, u2=0.217, u3=
    0.0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '14 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 4 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 59800, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 100.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 27.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jun 18 09:43:59 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-3'].suppress()
mdb.models['Model-1'].rootAssembly.Set(name='Set-23', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[13], ))
mdb.models['Model-1'].Moment(cm3=4554.6, createStepName='Step-1', 
    distributionType=UNIFORM, field='', localCsys=
    mdb.models['Model-1'].rootAssembly.datums[30], name='Load-1', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-23'])
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes lie on the axis of their cylindrical or spherical transformation systems. The local coordinate systems at these nodes are not well-defined. The nodes have been identified in node set WarnNodeCylTransSys.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '14 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 4 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 40436, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 100.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 27.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jun 18 09:48:23 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].faces.findAt(((
    -2.618603, -0.183148, 0.125), )), name='Set-24')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=
    mdb.models['Model-1'].rootAssembly.datums[30], name='BC-4', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-24'], u1=SET, u2=UNSET, u3=SET
    , ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes lie on the axis of their cylindrical or spherical transformation systems. The local coordinate systems at these nodes are not well-defined. The nodes have been identified in node set WarnNodeCylTransSys.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '14 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 4 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node. These boundary conditions indicate the rigid bodies cannot rotate about certain axes. Zero rotational boundary conditions have been added to these reference nodes.The reference nodes have been identified in node set WarnNodeOverconBoundRBRot.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 18348, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 100.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 27.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jun 18 10:04:40 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(u3=UNSET)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes lie on the axis of their cylindrical or spherical transformation systems. The local coordinate systems at these nodes are not well-defined. The nodes have been identified in node set WarnNodeCylTransSys.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '14 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 4 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node. These boundary conditions indicate the rigid bodies cannot rotate about certain axes. Zero rotational boundary conditions have been added to these reference nodes.The reference nodes have been identified in node set WarnNodeOverconBoundRBRot.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 35092, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 100.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 27.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jun 18 10:06:00 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-4'].suppress()
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-4-1'].edges.findAt((
    -0.884816, 2.338183, 0.0), ), MIDDLE))
mdb.models['Model-1'].constraints['Constraint-2'].setValues(refPointRegion=
    Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[48], )))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '14 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 4 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__T-CYLINDRICAL HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A CONCENTRATED LOAD HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-23.  THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].constraints['Constraint-2'].suppress()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '14 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 4 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET49 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__T-CYLINDRICAL HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A CONCENTRATED LOAD HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-23.  THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].constraints['Constraint-2'].resume()
mdb.models['Model-1'].rootAssembly.Set(name='Set-25', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[48], ))
mdb.models['Model-1'].loads['Load-1'].setValues(distributionType=UNIFORM, 
    field='', region=mdb.models['Model-1'].rootAssembly.sets['Set-25'])
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '14 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 4 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 73632, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 100.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 27.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jun 18 10:12:00 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['Part-1'].setValues(space=THREE_D, type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].rootAssembly.features['Part-4-1'].suppress()
mdb.models['Model-1'].rootAssembly.features['Part-4-1'].resume()
mdb.models['Model-1'].rootAssembly.features['Part-4-1'].suppress()
mdb.models['Model-1'].rootAssembly.resumeFeatures(('Part-1-1', 'Part-2-1', 
    'Part-2-1-rad-2'))
#* FeatureError: Regeneration failed
mdb.models['Model-1'].rootAssembly.makeDependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ))
mdb.models['Model-1'].rootAssembly.features['Part-1-1'].suppress()
mdb.models['Model-1'].rootAssembly.features['Part-1-1'].resume()
#* FeatureError: Regeneration failed
del mdb.models['Model-1'].rootAssembly.features['Part-1-1']
mdb.models['Model-1'].parts['Part-1'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Part-1'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-1'].edges.findAt((1.0, 0.0, 0.375), ), 
    CENTER))
mdb.models['Model-1'].parts['Part-1'].RemoveCells(cellList=(
    mdb.models['Model-1'].parts['Part-1'].cells.findAt((0.0, 0.963878, 0.0), ), 
    mdb.models['Model-1'].parts['Part-1'].cells.findAt((-2.49837, 0.090261, 
    0.125), )))
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.features['Part-4-1'].resume()
mdb.models['Model-1'].rootAssembly.suppressFeatures(('Part-1-1', 
    'Part-2-1-rad-2', 'Part-2-1'))
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Part-4-1', 'RP-2', 
    'Partition cell-1'))
mdb.models['Model-1'].rootAssembly.resumeFeatures(('Part-1-1', 'Part-2-1', 
    'Part-2-1-rad-2'))
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=(mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-2'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1']), name='Part-6', 
    originalInstances=SUPPRESS)
del mdb.models['Model-1'].rootAssembly.features['Part-6-1']
mdb.models['Model-1'].rootAssembly.resumeFeatures(('Part-2-1', 
    'Part-2-1-rad-2', 'Part-1-1'))
mdb.models['Model-1'].rootAssembly._previewMergeMeshes(instances=(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-2'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1']), 
    keepOnlyOrphanElems=True, mergeBoundaryOnly=False, nodeMergingTolerance=
    1e-06)
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=BOTH, 
    instances=(mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-2'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1']), mergeNodes=ALL, 
    name='Part-7', nodeMergingTolerance=1e-06, originalInstances=SUPPRESS)
del mdb.models['Model-1'].rootAssembly.features['Part-7-1']
mdb.models['Model-1'].rootAssembly.resumeFeatures(('Part-2-1', 
    'Part-2-1-rad-2', 'Part-1-1'))
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanCut(cuttingInstances=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ), 
    instanceToBeCut=mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], 
    name='Part-8', originalInstances=SUPPRESS)
#* Cannot create part instance.
del mdb.models['Model-1'].parts['Part-1'].features['Remove cells-1']
mdb.models['Model-1'].Part(name='Part-1-Rigid', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].parts['Part-1-Rigid'].RemoveCells(cellList=(
    mdb.models['Model-1'].parts['Part-1-Rigid'].cells.findAt((0.0, 0.963878, 
    0.0), ), mdb.models['Model-1'].parts['Part-1-Rigid'].cells.findAt((
    -2.49837, 0.090261, 0.125), )))
mdb.models['Model-1'].rootAssembly.regenerate()
#* FeatureError: Regeneration failed
del mdb.models['Model-1'].rootAssembly.features['Part-1-1']
mdb.models['Model-1'].parts['Part-1'].setValues(space=THREE_D, type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1-Rigid'].setValues(space=THREE_D, type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanCut(cuttingInstances=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ), 
    instanceToBeCut=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-2'], name=
    'Part-9', originalInstances=SUPPRESS)
mdb.models['Model-1'].rootAssembly.features['Part-1-1'].resume()
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanCut(cuttingInstances=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ), 
    instanceToBeCut=mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], 
    name='Part-10', originalInstances=SUPPRESS)
mdb.models['Model-1'].rootAssembly.features['Part-1-1'].resume()
mdb.models['Model-1'].rootAssembly.features['Part-1-1'].suppress()
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1-Rigid-1'
    , part=mdb.models['Model-1'].parts['Part-1-Rigid'])
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=(mdb.models['Model-1'].rootAssembly.instances['Part-9-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-10-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1']), name=
    'Part-11', originalInstances=SUPPRESS)
del mdb.models['Model-1'].sections['Section-1']
mdb.models['Model-1'].HomogeneousSolidSection(material='Maraging300Steel', 
    name='Section-1', thickness=None)
mdb.models['Model-1'].rootAssembly.resumeFeatures(('Part-1-Rigid-1', 
    'Part-10-1', 'Part-9-1'))
mdb.models['Model-1'].rootAssembly.features['Part-11-1'].suppress()
del mdb.models['Model-1'].parts['Part-1-Rigid'].features['Remove cells-1']
mdb.models['Model-1'].rootAssembly.regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].rootAssembly.features['Part-1-Rigid-1'].suppress()
mdb.models['Model-1'].rootAssembly.features['Part-1-Rigid-1'].resume()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Part-1-Rigid'].RemoveCells(cellList=(
    mdb.models['Model-1'].parts['Part-1-Rigid'].cells.findAt((0.0, 0.963878, 
    0.0), ), mdb.models['Model-1'].parts['Part-1-Rigid'].cells.findAt((
    -2.49837, 0.090261, 0.125), )))
mdb.models['Model-1'].rootAssembly.features['Part-1-Rigid-1'].suppress()
mdb.models['Model-1'].rootAssembly.features['Part-1-Rigid-1'].resume()
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=(mdb.models['Model-1'].rootAssembly.instances['Part-9-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-10-1']), name='Part-12', 
    originalInstances=SUPPRESS)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-2', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-12-1'].faces.findAt(((
    -2.486044, 0.263786, 0.25), )))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-2', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'].faces.findAt(
    ((-2.49837, 0.090261, 0.125), )))
mdb.models['Model-1'].Tie(adjust=ON, main=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-2'], name=
    'Constraint-3', positionToleranceMethod=COMPUTED, secondary=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-2'], thickness=ON, 
    tieRotations=ON)
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-2'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-2'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].Part(name='Part-2-Copy', objectToCopy=
    mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].parts['Part-2-Copy'].setValues(space=THREE_D, type=
    ANALYTIC_RIGID_SURFACE)
#* Parts with type other than analytic rigid cannot change their type to 
#* analytic rigid.
mdb.models['Model-1'].parts['Part-2-Copy'].setValues(space=THREE_D, type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-2-Copy'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-2-Copy'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-2-Copy'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.5, 0.057326))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.975, 0.258333))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.975, -0.258333))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.472131, 
    0.264007))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.474878, 
    -0.267452))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.491171, 
    0.423305))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.490191, 
    -0.370268))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.720485, 0.25))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.720485, -0.25))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.96, 0.2184))
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.5, 0.057326), 
    ), mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.975, 
    0.258333), ), mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((
    0.975, -0.258333), ), 
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.472131, 
    0.264007), ), mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((
    2.474878, -0.267452), ), 
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.491171, 
    0.423305), ), mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((
    2.490191, -0.370268), ), 
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((1.720485, 
    0.25), ), mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((
    1.720485, -0.25), ), 
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.96, 0.2184), 
    )))
mdb.models['Model-1'].sketches['__edit__'].rectangle(point1=(0.960000014018273, 
    0.279999951937421), point2=(2.48038169434245, -0.30518739012502))
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['Part-2-Copy']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-2'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-2'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-2'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((2.5, 0.55))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((2.5, 0.55), ), 
    points=((2.5, 0.55), (2.5, 0.55), (2.5, 0.530796647071838), (
    2.51898336410522, 0.52242785692215), (2.52594757080078, 0.5), (2.55, 0.5), 
    (2.55, 0.5), (2.55, 0.5), (2.55, 0.477794408798218), (2.55, 
    0.46803081035614), (2.55, 0.45), (2.56912612915039, 0.45), (
    2.57191181182861, 0.45), (2.57330465316772, 0.423397243022919), (
    2.57330465316772, 0.4), (2.57469749450684, 0.4), (2.57609033584595, 0.4), (
    2.57887601852417, 0.371789753437042), (2.58166170120239, 0.35), (2.6, 
    0.35), (2.6, 0.35), (2.6, 0.327156245708466), (2.6, 0.3), (2.6, 0.3), (2.6, 
    0.3), (2.6, 0.3), (2.6, 0.3)))
mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((2.483053, 
    -0.322912))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((
    2.48305317995237, -0.322911887951663), ), points=((2.48305317995237, 
    -0.322911887951663), (2.5, -0.3), (2.5, -0.35), (2.5, -0.35), (2.55, 
    -0.35), (2.55, -0.35), (2.55, -0.35), (2.6, -0.35), (2.6, 
    -0.3250373005867), (2.6, -0.3), (2.6, -0.3), (2.6, -0.3), (2.6, 
    -0.27542170882225)))
mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((2.6, -0.275422))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((2.6, 
    -0.27542170882225), ), points=((2.6, -0.27542170882225), (2.6, 
    -0.27542170882225), (2.6, -0.3), (2.6, -0.3), (2.55, -0.3), (2.55, -0.3), (
    2.55, -0.3), (2.55, -0.35), (2.55, -0.35), (2.55, -0.35), (2.55, -0.3), (
    2.55, -0.3), (2.55, -0.3), (2.55, -0.3)))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.515191, 
    -0.302594))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.515191, 
    -0.302594), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.625561, 
    0.300736))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.625561, 
    0.300736), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.65696, 
    -0.004289))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.65696, 
    -0.004289), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.65696, 
    -0.004289))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.65696, 
    -0.004289), ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[98], ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.65696, 
    -0.004289))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.65696, 
    -0.004289), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.65696, 
    -0.004289))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.65696, 
    -0.004289), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661), ))
mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((2.765795, 0.29661))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((
    2.76579539843486, 0.296610169491523), ), points=((2.76579539843486, 
    0.296610169491523), (2.75, 0.3), (2.7, 0.3), (2.7, 0.3), (2.65, 0.3), (
    2.65, 0.3), (2.65, 0.3), (2.6, 0.3), (2.6, 0.3), (2.6, 0.3), (2.6, 0.3), (
    2.6, 0.25), (2.65, 0.25), (2.65, 0.25), (2.7, 0.25), (2.7, 0.25), (2.7, 
    0.25), (2.75, 0.25), (2.75, 0.25), (2.7, 0.25), (2.7, 0.25), (2.7, 0.25), (
    2.65, 0.25), (2.65, 0.25), (2.65, 0.224550932645798), (2.6, 0.2), (2.6, 
    0.2), (2.65, 0.2), (2.65, 0.2), (2.65, 0.2), (2.7, 0.2)))
mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((2.518904, 
    -0.305187))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((
    2.51890424100641, -0.30518739012502), ), points=((2.51890424100641, 
    -0.30518739012502), (2.5, -0.3), (2.55, -0.3), (2.6, -0.3), (2.6, -0.3), (
    2.6, -0.3), (2.65, -0.3), (2.65, -0.3), (2.65, -0.3), (2.65, -0.25), (2.65, 
    -0.25), (2.65, -0.25), (2.65, -0.25), (2.65, -0.25), (2.65, -0.3), (2.65, 
    -0.3), (2.62497138977051, -0.3), (2.6, -0.3), (2.62497138977051, -0.35), (
    2.65, -0.35), (2.65, -0.35), (2.65, -0.3), (2.65, -0.3), (2.7, -0.3), (2.7, 
    -0.3), (2.7, -0.35), (2.7, -0.35), (2.7, -0.35), (2.75, -0.4), (2.75, 
    -0.4), (2.8, -0.35), (2.8, -0.35), (2.8, -0.35), (2.8, -0.3), (2.8, -0.3), 
    (2.8, -0.35), (2.75, -0.35), (2.75, -0.35), (2.75, -0.4), (2.75, -0.4), (
    2.75, -0.4), (2.7, -0.4), (2.7, -0.4), (2.7, -0.4), (2.7, -0.4)))
mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((2.439379, 
    -0.333303))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices.findAt((2.439379495673, 
    -0.333302975264928), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((3.061859, 
    0.266949))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((3.061859, 
    0.266949), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((3.061859, 
    0.266949))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((3.061859, 
    0.266949), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((3.061859, 
    0.266949))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((3.061859, 
    0.266949), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((3.04082, 0.231356))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.605545, 
    -0.29661))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.780867, 0.29661))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((3.04082, 
    0.231356), ), mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((
    2.605545, -0.29661), ), 
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.780867, 
    0.29661), )))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(2.48234212140748, 
    0.29661016966464), point2=(2.51816296577454, 0.29661016966464))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.500253, 0.29661))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((
    2.500253, 0.29661), ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(2.51816296577454, 
    0.29661016966464), point2=(2.51816296577454, -0.3))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.518163, 
    -0.001695))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((
    2.518163, -0.001695), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.500253, 0.29661))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.518163, 
    -0.001695))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.500253, 
    0.29661), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.518163, 
    -0.001695), ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(2.51816296577454, -0.3)
    , point2=(2.48234212138074, -0.29661016949583))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.500253, 
    -0.298305))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.500253, 
    -0.298305), ))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.518163, 
    0.266949))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((2.518163, 
    0.266949), ), entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((-2.482342, 
    -0.29661), ))
mdb.models['Model-1'].parts['Part-2'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-2'].regenerate()
mdb.models['Model-1'].rootAssembly.features['Part-2-1'].resume()
mdb.models['Model-1'].rootAssembly.features['Part-2-1'].suppress()
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Part-12-1', 'Part-1-1', 
    'Part-9-1', 'Part-10-1', 'Part-1-Rigid-1', 'Part-11-1'))
mdb.models['Model-1'].rootAssembly.resumeFeatures(('Part-2-1', 
    'Part-2-1-rad-2'))
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanCut(cuttingInstances=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ), 
    instanceToBeCut=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-2'], name=
    'Cut-1', originalInstances=SUPPRESS)
mdb.models['Model-1'].rootAssembly.features['Part-1-1'].resume()
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanCut(cuttingInstances=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ), 
    instanceToBeCut=mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], 
    name='Cut-2', originalInstances=SUPPRESS)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1-Rigid-1'
    , part=mdb.models['Model-1'].parts['Part-1-Rigid'])
mdb.models['Model-1'].constraints.delete(('Constraint-1', 'Constraint-2', 
    'Constraint-3'))
mdb.models['Model-1'].rootAssembly.makeIndependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'], ))
mdb.models['Model-1'].rootAssembly.PartitionFaceByIntersectFace(cuttingFaces=
    mdb.models['Model-1'].rootAssembly.instances['Cut-1-1'].faces.findAt(((
    -2.486044, 0.263786, 0.25), )), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'].faces.findAt(
    ((-2.49837, 0.090261, 0.125), )))
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-3', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'].faces.findAt(
    ((-2.486044, -0.263786, 0.25), )))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-3', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Cut-1-1'].faces.findAt(((
    -2.486044, 0.263786, 0.25), )))
mdb.models['Model-1'].Tie(adjust=ON, main=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-3'], name=
    'Constraint-1', positionToleranceMethod=COMPUTED, secondary=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-3'], thickness=ON, 
    tieRotations=ON)
mdb.models['Model-1'].rootAssembly.PartitionFaceByIntersectFace(cuttingFaces=
    mdb.models['Model-1'].rootAssembly.instances['Cut-1-1'].faces.findAt(((
    -0.972157, 0.234331, 0.25), )), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'].faces.findAt(
    ((-0.998481, -0.055095, 0.125), )))
mdb.models['Model-1'].rootAssembly.features['Cut-2-1'].suppress()
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-5', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'].faces.findAt(
    ((-0.97572, -0.219023, 0.25), )))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-5', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Cut-1-1'].faces.findAt(((
    -0.972157, 0.234331, 0.25), )))
mdb.models['Model-1'].Tie(adjust=ON, main=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-5'], name=
    'Constraint-2', positionToleranceMethod=COMPUTED, secondary=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-5'], thickness=ON, 
    tieRotations=ON)
del mdb.models['Model-1'].sections['Section-1']
mdb.models['Model-1'].HomogeneousSolidSection(material='Maraging300Steel', 
    name='Section-1', thickness=None)
mdb.models['Model-1'].parts['Cut-1'].Set(cells=
    mdb.models['Model-1'].parts['Cut-1'].cells.findAt(((-0.961472, -0.275801, 
    0.25), )), name='Set-1')
mdb.models['Model-1'].parts['Cut-1'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Cut-1'].sets['Set-1'], sectionName='Section-1'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].boundaryConditions.delete(('BC-1', 'BC-2', 'BC-3', 
    'BC-4'))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'].faces.findAt(
    ((-0.922281, -0.38652, 0.125), )), name='Set-26')
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-26'])
del mdb.models['Model-1'].loads['Load-1']
mdb.models['Model-1'].rootAssembly.Set(name='Set-27', vertices=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'].vertices.findAt(
    ((0.0, 2.625, 0.375), )))
mdb.models['Model-1'].ConcentratedForce(cf2=100.0, createStepName='Step-1', 
    distributionType=UNIFORM, field='', localCsys=None, name='Load-1', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-27'])
mdb.models['Model-1'].rootAssembly.makeIndependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['Cut-1-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.01, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Cut-1-1'], ), size=0.125)
mdb.models['Model-1'].rootAssembly.seedEdgeByBias(biasMethod=SINGLE, 
    constraint=FINER, end1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Cut-1-1'].edges.findAt(((
    -1.360242, -0.25, 0.375), ), ((-1.360242, -0.25, 0.0), ), ), end2Edges=
    mdb.models['Model-1'].rootAssembly.instances['Cut-1-1'].edges.findAt(((
    -2.080727, 0.25, 0.375), ), ((-2.080727, 0.25, 0.0), ), ), number=100, 
    ratio=5.0)
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=MEDIAL_AXIS, 
    regions=
    mdb.models['Model-1'].rootAssembly.instances['Cut-1-1'].cells.findAt(((
    -0.961472, -0.275801, 0.25), )), sizeGrowthRate=1.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Cut-1-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.01, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'], ), size=
    0.125)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.01, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'], ), size=
    0.25)
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=MEDIAL_AXIS, 
    regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'].faces.findAt(
    ((-0.922281, -0.38652, 0.125), ), ((0.0, 0.963878, 0.375), ), ((0.0, 
    0.963878, 0.0), ), ((-2.618603, -0.183148, 0.125), ), ((-2.455758, 
    -0.468242, 0.25), ), ((0.181923, 2.564212, 0.375), ), ((-0.181923, 
    2.564212, 0.0), ), ), sizeGrowthRate=1.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'], ))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-5), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-5), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '216 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 59896, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 74.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 24.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jun 18 11:22:58 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-1'].setValues(cf2=2000.0, distributionType=
    UNIFORM, field='')
del mdb.models['Model-1'].loads['Load-1']
mdb.models['Model-1'].rootAssembly.Set(name='Set-28', referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-1'].referencePoints[2], 
    ))
mdb.models['Model-1'].Moment(cm3=4554.6, createStepName='Step-1', 
    distributionType=UNIFORM, field='', follower=ON, localCsys=None, name=
    'Load-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-28'])
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-5), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-5), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '216 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 27556, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 74.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 24.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jun 18 11:25:13 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].Part(name='Part-1-Rigid-Inner', objectToCopy=
    mdb.models['Model-1'].parts['Part-1-Rigid'])
mdb.models['Model-1'].parts['Part-1-Rigid'].setValues(space=THREE_D, type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts.changeKey(fromName='Part-1-Rigid', toName=
    'Part-1-Rigid-Outer')
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.0, -2.5))
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.0, -2.625))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.0, -2.5), ), 
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.0, -2.625), 
    )))
mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].backup()
del mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].features['Remove cells-1']
mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].RemoveCells(cellList=(
    mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].cells.findAt((0.0, 
    0.985432, 0.0), ), ))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.0, -1.0))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry.findAt((0.0, -1.0), ), 
    ))
mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].backup()
mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].deleteFeatures(('RP', 
    'Remove cells-1'))
mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].edges.findAt((-2.625, 
    0.0, 0.0), ), CENTER))
mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].RemoveCells(cellList=(
    mdb.models['Model-1'].parts['Part-1-Rigid-Outer'].cells.findAt((-2.49837, 
    0.090261, 0.125), ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].rootAssembly.features.changeKey(fromName='Part-1-Rigid-1'
    , toName='Part-1-Rigid-Outer-1')
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Part-1-Rigid-Inner-1', part=
    mdb.models['Model-1'].parts['Part-1-Rigid-Inner'])
mdb.models['Model-1'].rootAssembly.makeIndependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Inner-1'], ))
mdb.models['Model-1'].rootAssembly.PartitionFaceByIntersectFace(cuttingFaces=
    mdb.models['Model-1'].rootAssembly.instances['Cut-1-1'].faces.findAt(((
    -0.972157, 0.234331, 0.25), )), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Inner-1'].faces.findAt(
    ((-0.997563, -0.069771, 0.125), )))
del mdb.models['Model-1'].rootAssembly.features['Partition face-2']
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-7', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Inner-1'].faces.findAt(
    ((-0.97572, -0.219023, 0.25), )))
mdb.models['Model-1'].constraints['Constraint-2'].setValues(main=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-7'])
mdb.models['Model-1'].rootAssembly.Set(name='Set-29', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[13], ))
mdb.models['Model-1'].loads['Load-1'].setValues(distributionType=UNIFORM, 
    field='', region=mdb.models['Model-1'].rootAssembly.sets['Set-29'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Inner-1'].faces.findAt(
    ((-0.938003, -0.346627, 0.125), )), name='Set-30')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(localCsys=
    mdb.models['Model-1'].rootAssembly.datums[30], region=
    mdb.models['Model-1'].rootAssembly.sets['Set-30'])
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Outer-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Inner-1'], ), 
    size=0.28)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Inner-1'], ))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '12 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A CONCENTRATED LOAD HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-29.  THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '44 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '12 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A CONCENTRATED LOAD HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-29.  THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '44 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(name='Set-31', referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Inner-1'].referencePoints[2], 
    ))
mdb.models['Model-1'].loads['Load-1'].setValues(distributionType=UNIFORM, 
    field='', region=mdb.models['Model-1'].rootAssembly.sets['Set-31'])
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '12 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '44 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 64492, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 73.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 23.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 744.305E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 19.6600E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 3.50543E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 11.2677E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 18.8715E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 1.23500E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 26.6279E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 5.19932E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 49.1326E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 549.751E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 7.19956E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 115.863E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.27861E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 6.40078E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 2.98703E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 3 POINTS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 2.75940E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66767E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.56953E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.71423E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 11.2249E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.73558E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 5.12811E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 955.125E+09  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 11.7274E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 3.26968E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 1.23573E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 19.8479E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.66836E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 9.52523E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 14.2494E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 0.25, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.0625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 4U', 
    'timeIncrement': 0.015625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 5U', 
    'timeIncrement': 0.00390625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many attempts made for this increment', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-1'].setValues(cm3=500.0, distributionType=
    UNIFORM, field='')
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '12 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '44 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 29080, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 73.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 23.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 0.25, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.0625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 4U', 
    'timeIncrement': 0.015625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 5U', 
    'timeIncrement': 0.00390625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many attempts made for this increment', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-1'].suppress()
mdb.models['Model-1'].rootAssembly.Set(name='Set-32', vertices=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Outer-1'].vertices.findAt(
    ((0.0, 2.625, 0.375), ), ((0.0, 2.625, 0.0), ), ))
mdb.models['Model-1'].ConcentratedForce(cf2=300.0, createStepName='Step-1', 
    distributionType=UNIFORM, field='', localCsys=None, name='Load-2', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-32'])
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '12 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '44 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 26004, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 73.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 23.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 2.96146E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 3.84145E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 5.04120E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 8.60266E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 4.26046E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 1.81840E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 5.54065E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 4.54942E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 6.68977E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 38.4164E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 17.2955E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.58614E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.01203E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 6.13719E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 103.160E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 0.25, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.0625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 4U', 
    'timeIncrement': 0.015625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 5U', 
    'timeIncrement': 0.00390625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many attempts made for this increment', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '12 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '44 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 58580, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 73.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 23.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 2.96146E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 3.84145E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 5.04120E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 8.60266E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 4.26046E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 1.81840E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 5.54065E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 4.54942E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 6.68977E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 38.4164E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 17.2955E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.58614E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.01203E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 6.13719E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 103.160E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 0.25, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.0625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 4U', 
    'timeIncrement': 0.015625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 5U', 
    'timeIncrement': 0.00390625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many attempts made for this increment', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-2'].setValues(cf2=5.0, distributionType=
    UNIFORM, field='')
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '12 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '44 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 25920, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 73.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 23.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 0.25, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.0625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 4U', 
    'timeIncrement': 0.015625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 1 ratio = 4.94124E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 27.5838E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 1.36987E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 5.53786E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 7.30006E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 5U', 
    'timeIncrement': 0.00390625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many attempts made for this increment', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Inner-1'].faces.findAt(
    ((-0.938003, -0.346627, 0.125), ), ((0.0, 0.985432, 0.375), ), ((0.0, 
    0.985432, 0.0), ), ), name='Set-33')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-33'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Inner-1'].faces.findAt(
    ((-0.938003, -0.346627, 0.125), ), ((0.0, 0.985432, 0.375), ), ((0.0, 
    0.985432, 0.0), ), ), name='Set-34')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-34'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-Rigid-Outer-1'].faces.findAt(
    ((0.181923, 2.564212, 0.375), )), name='Set-35')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-2', 
    region=mdb.models['Model-1'].rootAssembly.sets['Set-35'], u1=UNSET, u2=
    UNSET, u3=SET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].loads['Load-1'].resume()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '12 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node. These boundary conditions indicate the rigid bodies cannot rotate about certain axes. Zero rotational boundary conditions have been added to these reference nodes.The reference nodes have been identified in node set WarnNodeOverconBoundRBRot.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '141 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 33432, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 73.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 23.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Thu Jun 20 11:58:34 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-1'].setValues(distributionType=UNIFORM, 
    field='', localCsys=mdb.models['Model-1'].rootAssembly.datums[1])
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '12 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node. These boundary conditions indicate the rigid bodies cannot rotate about certain axes. Zero rotational boundary conditions have been added to these reference nodes.The reference nodes have been identified in node set WarnNodeOverconBoundRBRot.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '141 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 30548, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 73.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 23.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Thu Jun 20 12:00:54 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-1'].suppress()
mdb.models['Model-1'].loads['Load-2'].resume()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-3-ASSEMBLY_M_SURF-3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), NOT ALL THE NODES THAT HAVE BEEN ADJUSTED WERE PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-5-ASSEMBLY_M_SURF-7), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '40 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '12 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-29 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node. These boundary conditions indicate the rigid bodies cannot rotate about certain axes. Zero rotational boundary conditions have been added to these reference nodes.The reference nodes have been identified in node set WarnNodeOverconBoundRBRot.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Nodes belonging to 1 RIGID BODIES have boundary conditions prescribed at nodes other than the reference node(s). Because different *TRANSFORM options have been used at these nodes. these boundary conditions cannot be transferred to the correspondent reference node(s). Furthermore, these boundary conditions will be neglected.The reference node(s) of these rigid bodies have been identified in node set WarnNodeOverconBoundRBTra.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '141 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Stuff\\Abaqus\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'BCDC-HCLQCX3', 'handle': 56600, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 73.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65225.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 23.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 0.25, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.0625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 4U', 
    'timeIncrement': 0.015625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.189 D.O.F. 3 ratio = 4.66045E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 1 ratio = 2.16553E+12.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 2 ratio = 10.1126E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CUT-1-1.76 D.O.F. 3 ratio = 12.4372E+12 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 5U', 
    'timeIncrement': 0.00390625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many attempts made for this increment', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1-Rigid-Inner'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by ajbarcio on 2024_06_20-17.16.14; build 2023 2022_09_28-13.11.55 183150
