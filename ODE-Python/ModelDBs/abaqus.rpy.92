# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2023 replay file
# Internal Version: 2022_09_28-13.11.55 183150
# Run by ajbarcio on Wed Jul 17 09:12:54 2024
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=313.162475585938, 
    height=223.766662597656)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
execfile('../Abaqus_Interface.py', __main__.__dict__)
#: A new model database has been created.
#: The model "Model-1" has been created.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON, optimizationTasks=OFF, 
    geometricRestrictions=OFF, stopConditions=OFF)
mdb.models['Model-1'].StaticStep(name='Step-1', previous='Initial')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Step-1')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON, adaptiveMeshConstraints=OFF)
a = mdb.models['Model-1'].rootAssembly
r1 = a.instances['Outer Surface'].referencePoints
refPoints1=(r1[2], )
region = a.Set(referencePoints=refPoints1, name='Moment-Node')
mdb.models['Model-1'].Moment(name='Load-1', createStepName='Step-1', 
    region=region, cm3=514.0, distributionType=UNIFORM, field='', 
    localCsys=None)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.Job(name='Job-1', model='Model-1', description='', type=ANALYSIS, 
    atTime=None, waitMinutes=0, waitHours=0, queue=None, memory=90, 
    memoryUnits=PERCENTAGE, getMemoryFromAnalysis=True, 
    explicitPrecision=SINGLE, nodalOutputPrecision=SINGLE, echoPrint=OFF, 
    modelPrint=OFF, contactPrint=OFF, historyPrint=OFF, userSubroutine='', 
    scratch='', resultsFormat=ODB, numThreadsPerMpiProcess=1, 
    multiprocessingMode=DEFAULT, numCpus=1, numGPUs=0)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Initial')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Inner Surface'].faces
faces1 = f1.findAt(((-0.978779, -0.353828, 0.125), ), ((-0.978779, 0.353828, 
    0.25), ))
region = a.Set(faces=faces1, name='Set-3')
mdb.models['Model-1'].boundaryConditions['Inner-Encastre'].setValues(
    region=region)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p1 = mdb.models['Model-1'].parts['Elastic_Portion']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
mdb.models['Model-1'].Material(name='Material-1')
mdb.models['Model-1'].materials['Material-1'].Elastic(table=((27500000.0, 
    0.33), ))
mdb.models['Model-1'].materials['Material-1'].Plastic(scaleStress=None, table=(
    (309000.0, 0.0), ))
mdb.models['Model-1'].materials['Material-1'].plastic.setValues(
    scaleStress=None, table=((309700.0, 0.0), ))
mdb.models['Model-1'].HomogeneousSolidSection(name='Section-1', 
    material='Material-1', thickness=None)
p1 = mdb.models['Model-1'].parts['Outer-Surface']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-1'].parts['Outer-Boolean']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-1'].parts['Flexure-Outer-Cut']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p = mdb.models['Model-1'].parts['Flexure-Outer-Cut']
c = p.cells
cells = c.findAt(((-2.091549, 0.935981, 0.1875), ), ((2.355218, -0.302799, 
    0.125), ))
region = p.Set(cells=cells, name='Set-1')
p = mdb.models['Model-1'].parts['Flexure-Outer-Cut']
p.SectionAssignment(region=region, sectionName='Section-1', offset=0.0, 
    offsetType=MIDDLE_SURFACE, offsetField='', 
    thicknessAssignment=FROM_SECTION)
a = mdb.models['Model-1'].rootAssembly
a.regenerate()
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
a1 = mdb.models['Model-1'].rootAssembly
a1.makeIndependent(instances=(a1.instances['Flexure-Outer-Cut-1'], ))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=ON)
a = mdb.models['Model-1'].rootAssembly
partInstances =(a.instances['Inner Surface'], )
a.seedPartInstance(regions=partInstances, size=0.21, deviationFactor=0.1, 
    minSizeFactor=0.1)
a = mdb.models['Model-1'].rootAssembly
partInstances =(a.instances['Outer Surface'], )
a.seedPartInstance(regions=partInstances, size=0.32, deviationFactor=0.1, 
    minSizeFactor=0.1)
a = mdb.models['Model-1'].rootAssembly
partInstances =(a.instances['Flexure-Outer-Cut-1'], )
a.seedPartInstance(regions=partInstances, size=0.33, deviationFactor=0.1, 
    minSizeFactor=0.1)
a = mdb.models['Model-1'].rootAssembly
partInstances =(a.instances['Flexure-Outer-Cut-1'], 
    a.instances['Outer Surface'], a.instances['Inner Surface'], )
a.generateMesh(regions=partInstances)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Step-1')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=OFF, loads=ON, 
    bcs=ON, predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
#: The job input file "Job-1.inp" has been submitted for analysis.
#: Error in job Job-1: THE PAIR OF SURFACES (ASSEMBLY_INNERRIGHTSURFACED, ASSEMBLY_INNERRIGHTSURFACE) IS USED MORE THAN ONCE TO DEFINE *TIE. THIS IS NOT ALLOWED. PLEASE REMOVE DUPLICATES.
#: Error in job Job-1: THE PAIR OF SURFACES (ASSEMBLY_INNERRIGHTSURFACED, ASSEMBLY_INNERRIGHTSURFACE) IS USED MORE THAN ONCE TO DEFINE *TIE. THIS IS NOT ALLOWED. PLEASE REMOVE DUPLICATES.
#: Error in job Job-1: THE PAIR OF SURFACES (ASSEMBLY_INNERRIGHTSURFACED, ASSEMBLY_INNERRIGHTSURFACE) IS USED MORE THAN ONCE TO DEFINE *TIE. THIS IS NOT ALLOWED. PLEASE REMOVE DUPLICATES.
#: Job Job-1: Analysis Input File Processor aborted due to errors.
#: Error in job Job-1: Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.
#: Job Job-1 aborted due to errors.
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=ON, 
    constraints=ON, connectors=ON, engineeringFeatures=ON)
